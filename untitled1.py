# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1woLluPMkBYmSHfEoEzkUmEIC2t_xjH8U
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

heart_data = pd.read_csv('/content/heart.csv')

heart_data.head()

heart_data.tail()

heart_data.shape

heart_data.isnull().sum()

heart_data.describe()

heart_data['target'].value_counts()

X = heart_data.drop(columns='target',axis=1)
Y = heart_data['target']

print(Y)

X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.3,stratify=Y,random_state=2)

print(X.shape,X_train.shape,X_test.shape)

model = LogisticRegression()

model.fit(X_train,Y_train)

X_train_prediction = model.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction,Y_train)

print('Accuracy on training data :',training_data_accuracy)

X_test_prediction = model.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction,Y_test)

print('Accuracy on test data :',test_data_accuracy)


input_data = (62,0,0,138,294,1,1,106,0,1.9,1,3,2)

input_data_as_numpy_array = np.asarray(input_data)

input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

prediction = model.predict(input_data_reshaped)
print(prediction)

if(prediction[0]==0):
  print('heart disease not found')
else:
  print('heart disease found')

